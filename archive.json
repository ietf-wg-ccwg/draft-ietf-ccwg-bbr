{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2024-10-22T01:21:48.729824+00:00",
  "repo": "ietf-wg-ccwg/draft-ietf-ccwg-bbr",
  "labels": [
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "Editorial",
      "description": "Editorial issues or PRs that don't change the wire image or normative behavior.",
      "color": "006b75"
    }
  ],
  "issues": [
    {
      "number": 4,
      "id": "I_kwDOL3MllM6agc6U",
      "title": "Talk about TCP and SACK less",
      "url": "https://github.com/ietf-wg-ccwg/draft-ietf-ccwg-bbr/issues/4",
      "state": "OPEN",
      "author": "ianswett",
      "authorAssociation": "NONE",
      "assignees": [
        "ianswett"
      ],
      "labels": [
        "Editorial"
      ],
      "body": "I believe the intent is to be as agnostic to the specific transport as possible, so implementers in QUIC or other transports can implement BBR as well.\r\n\r\nCurrently the draft has a number of references to TCP and SACK.  Some of them are needed for technical accuracy, but others could be removed or changed to more general language.",
      "createdAt": "2024-10-16T15:13:46Z",
      "updatedAt": "2024-10-21T15:36:57Z",
      "closedAt": null,
      "comments": [
        {
          "author": "nealcardwell",
          "authorAssociation": "COLLABORATOR",
          "body": "Great point. @ianswett  or @jbeshay -  do you have interest and cycles to take this on? :-) IMHO it would be good to have editorial changes from someone who is familiar with QUIC terminology, so the new text makes sense for both TCP and QUIC.\r\n",
          "createdAt": "2024-10-21T14:28:41Z",
          "updatedAt": "2024-10-21T14:28:41Z"
        },
        {
          "author": "ianswett",
          "authorAssociation": "NONE",
          "body": "I was intending to tackle this, but I'm always happy to review someone else's PRs as well.",
          "createdAt": "2024-10-21T14:42:48Z",
          "updatedAt": "2024-10-21T14:42:48Z"
        },
        {
          "author": "nealcardwell",
          "authorAssociation": "COLLABORATOR",
          "body": "Great, thanks!\r\n",
          "createdAt": "2024-10-21T15:36:56Z",
          "updatedAt": "2024-10-21T15:36:56Z"
        }
      ]
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDOL3MllM52vZRc",
      "title": "fix: correct misspelling \"que\" to \"queue\"",
      "url": "https://github.com/ietf-wg-ccwg/draft-ietf-ccwg-bbr/pull/1",
      "state": "MERGED",
      "author": "spmzt",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This pull request corrects a misspelling of the word 'queue'.",
      "createdAt": "2024-07-29T12:40:23Z",
      "updatedAt": "2024-07-29T13:06:34Z",
      "baseRepository": "ietf-wg-ccwg/draft-ietf-ccwg-bbr",
      "baseRefName": "main",
      "baseRefOid": "0f46affa058bdd125291f4a46098534f93cb4140",
      "headRepository": "spmzt/draft-cardwell-ccwg-bbr",
      "headRefName": "main",
      "headRefOid": "c3754e8f9c1e83a63352d658738e990c97e98a42",
      "closedAt": "2024-07-29T13:06:34Z",
      "mergedAt": "2024-07-29T13:06:34Z",
      "mergedBy": "nealcardwell",
      "mergeCommit": {
        "oid": "fbb5bc1beebd3507f12397f481833521f4c095d5"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 2,
      "id": "PR_kwDOL3MllM55Bily",
      "title": " Remove secs inside pseudocode of BBRPickProbeWait ",
      "url": "https://github.com/ietf-wg-ccwg/draft-ietf-ccwg-bbr/pull/2",
      "state": "CLOSED",
      "author": "spmzt",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This pull request removes the non-pseudocode keyword 'secs'.\r\nI think the keyword 'secs' was unnecessary and not part of the pseudocode structure.",
      "createdAt": "2024-08-21T18:48:27Z",
      "updatedAt": "2024-10-21T16:03:33Z",
      "baseRepository": "ietf-wg-ccwg/draft-ietf-ccwg-bbr",
      "baseRefName": "main",
      "baseRefOid": "a9eb2f4f3649ce174503765d79565e1c6e65cb03",
      "headRepository": "spmzt/draft-cardwell-ccwg-bbr",
      "headRefName": "main",
      "headRefOid": "bd160b2ee252822f2cd34e948ba17a405d199b7e",
      "closedAt": "2024-10-21T16:03:33Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "spmzt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Done.",
          "createdAt": "2024-08-24T23:42:39Z",
          "updatedAt": "2024-08-24T23:42:39Z"
        },
        {
          "author": "nealcardwell",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks! Merged here, after rebasing to apply to the .md:\r\n\r\nhttps://github.com/ietf-wg-ccwg/draft-ietf-ccwg-bbr/commit/4159875aa93802a5603b5b75d61e28b70086bbd2\r\n\r\nAlso added you to the Acknowledgments:\r\n\r\nhttps://github.com/ietf-wg-ccwg/draft-ietf-ccwg-bbr/commit/871539f6c9e8561fc77578c37f6f33e890797c8f\r\n",
          "createdAt": "2024-10-21T16:03:33Z",
          "updatedAt": "2024-10-21T16:03:33Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOL3MllM6Glt7N",
          "commit": {
            "abbreviatedOid": "975628f"
          },
          "author": "nealcardwell",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-23T20:16:08Z",
          "updatedAt": "2024-08-23T20:18:01Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "This \"que\" seems like it has already been fixed? Please rebase your patch series onto the latest version of the draft. Thanks!\r\n",
              "createdAt": "2024-08-23T20:16:08Z",
              "updatedAt": "2024-08-23T20:18:01Z"
            },
            {
              "originalPosition": 4,
              "body": "It seems like the removal of \"secs\" is the contribution here?\r\n\r\nCan you please rebase your commit onto the latest draft commits, and squash your commits into a single commit that makes this change? Thanks!\r\n",
              "createdAt": "2024-08-23T20:17:58Z",
              "updatedAt": "2024-08-23T20:18:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOL3MllM6Gl05r",
          "commit": {
            "abbreviatedOid": "975628f"
          },
          "author": "spmzt",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-23T20:37:13Z",
          "updatedAt": "2024-08-23T20:37:13Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Ok",
              "createdAt": "2024-08-23T20:37:13Z",
              "updatedAt": "2024-08-23T20:37:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOL3MllM6NSCRY",
          "commit": {
            "abbreviatedOid": "bd160b2"
          },
          "author": "ianswett",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-15T18:59:53Z",
          "updatedAt": "2024-10-15T18:59:53Z",
          "comments": []
        }
      ]
    },
    {
      "number": 3,
      "id": "PR_kwDOL3MllM58OHZQ",
      "title": "Language clarifications",
      "url": "https://github.com/ietf-wg-ccwg/draft-ietf-ccwg-bbr/pull/3",
      "state": "MERGED",
      "author": "jbeshay",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "- Minor clarifications to the prose\r\n- Removes explicit references to Youtube",
      "createdAt": "2024-09-20T22:35:22Z",
      "updatedAt": "2024-10-21T21:57:31Z",
      "baseRepository": "ietf-wg-ccwg/draft-ietf-ccwg-bbr",
      "baseRefName": "main",
      "baseRefOid": "871539f6c9e8561fc77578c37f6f33e890797c8f",
      "headRepository": "jbeshay/draft-ietf-ccwg-bbr",
      "headRefName": "20240920",
      "headRefOid": "acbd8ca5e1f58ba8c23ae8d392bccb0d378ea6a3",
      "closedAt": "2024-10-21T21:57:23Z",
      "mergedAt": "2024-10-21T21:57:23Z",
      "mergedBy": "jbeshay",
      "mergeCommit": {
        "oid": "b912be6cbc3ffec98692d4acd5da9067f3237611"
      },
      "comments": [
        {
          "author": "jbeshay",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I am going to redo this on top of the markdown version.\r\ncc @nealcardwell @ianswett ",
          "createdAt": "2024-10-17T04:41:48Z",
          "updatedAt": "2024-10-17T04:41:48Z"
        },
        {
          "author": "nealcardwell",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks, this 4-commit version with purely editorial changes looks great to merge now. Thanks!\r\n",
          "createdAt": "2024-10-21T20:27:21Z",
          "updatedAt": "2024-10-21T20:27:21Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOL3MllM6KcVOy",
          "commit": {
            "abbreviatedOid": "9571b36"
          },
          "author": "nealcardwell",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Thanks! Mostly looks great. I had one question and one quick suggestion.\r\n\r\ncc: @ianswett\r\n",
          "createdAt": "2024-09-23T15:42:24Z",
          "updatedAt": "2024-09-23T15:55:06Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "I agree it would be great to simplify this ack_phase stuff... But AFAICT this has a bug: in a particular ProbeBW_DOWN episode, before a round trip in ProbeBW_DOWN elapses (before BBR.round_start becomes true),  BBRIsTimeToCruise() may return true if inflight is less than the estimated BDP. So this expression may never be true, and the BBRAdvanceMaxBwFilter() may never be called. WDYT?\r\n",
              "createdAt": "2024-09-23T15:42:24Z",
              "updatedAt": "2024-09-23T15:55:06Z"
            },
            {
              "originalPosition": 5,
              "body": "Looks like this 0.35 value occurs a second time, lower in the text:\r\n\r\n    It uses a pacing_gain of BBRDrainPacingGain = 0.35\r\n\r\nLet's change that one as well. Perhaps we should remove the discussion of the exactly value in that other spot, so we don't have this kind of potential disagreement in the text in the future. How about:\r\n\r\nold:\r\n\r\n      It uses a pacing_gain of BBRDrainPacingGain = 0.35, chosen...\r\n\r\nproposed:\r\n\r\n      It uses a pacing_gain of BBRDrainPacingGain, with a value chosen ...\r\n",
              "createdAt": "2024-09-23T15:47:49Z",
              "updatedAt": "2024-09-23T15:55:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOL3MllM6KomE2",
          "commit": {
            "abbreviatedOid": "9d31d2e"
          },
          "author": "jbeshay",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-24T17:11:16Z",
          "updatedAt": "2024-09-24T17:11:17Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "Good point. One way to avoid the bug is to advance the cycle when entering ProbeBW_DOWN if the transport isn't app limited. That's the approach I've taken in mvfst. ",
              "createdAt": "2024-09-24T17:11:17Z",
              "updatedAt": "2024-09-24T17:11:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOL3MllM6NSCzk",
          "commit": {
            "abbreviatedOid": "9571b36"
          },
          "author": "ianswett",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "TBH, I think sent and transmitted are equivalent and sent is shorter, so unless there's a clear definition of one vs the other, I prefer sent.",
          "createdAt": "2024-10-15T19:01:04Z",
          "updatedAt": "2024-10-16T02:00:46Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\n<t>Variables for connection state (C), per-packet state (P), or per-ACK rate sample (rs) that are not defined below are defined in <xref target=\"delivery-rate-samples\"/> \"Delivery Rate Samples\".</t>\r\n```",
              "createdAt": "2024-10-15T19:01:04Z",
              "updatedAt": "2024-10-16T02:00:46Z"
            },
            {
              "originalPosition": 43,
              "body": "```suggestion\r\n<t>BBR's state machine uses two control mechanisms: the pacing_gain and the cwnd. Primarily, it uses the pacing_gain (see the \"Pacing Rate\" section), which controls how fast packets are sent relative to BBR.bw. A pacing_gain &gt; 1 decreases inter-packet time and increases inflight. A pacing_gain &lt; 1 has the opposite effect, increasing inter-packet time and while aiming to decrease inflight. The cwnd is sufficiently larger than the BDP to allow the higher pacing gain to accumulate more packets in flight. Only if the state machine needs to quickly reduce inflight to a particular absolute value, it uses the cwnd.</t>\r\n```",
              "createdAt": "2024-10-16T01:47:21Z",
              "updatedAt": "2024-10-16T02:00:46Z"
            },
            {
              "originalPosition": 53,
              "body": "```suggestion\r\n<t>Upon starting a full pipe detection process (either on startup or when probing for an increase in bandwidth), the following steps are taken:</t>\r\n```",
              "createdAt": "2024-10-16T01:47:56Z",
              "updatedAt": "2024-10-16T02:00:46Z"
            },
            {
              "originalPosition": 62,
              "body": "Maybe we should define what a 'round' is above and use that here and elsewhere?",
              "createdAt": "2024-10-16T01:48:43Z",
              "updatedAt": "2024-10-16T02:00:46Z"
            },
            {
              "originalPosition": 62,
              "body": "I thought the 3 round number was due to a number of issues, including receive window auto-tuning.  This text seems to be assuming a certain auto-tuning behavior, which I'm a bit uncomfortable with given it's implementation dependent.\r\n\r\n```suggestion\r\n<t>BBR waits three packet-timed round trips to have solid evidence that the sender is not detecting a delivery-rate plateau that was temporarily imposed by the receive window or temporary congestion. Allowing three rounds provides time for the receiver's receive-window auto-tuning to open up the receive window and for the BBR sender to realize that BBR.max_bw should be higher: in the first round the receive-window auto-tuning algorithm grows the receive window; in the second round the sender fills the higher receive window; in the third round the sender gets higher delivery-rate samples. This three-round threshold was validated by experimental data.</t>\r\n```",
              "createdAt": "2024-10-16T01:51:54Z",
              "updatedAt": "2024-10-16T02:00:46Z"
            },
            {
              "originalPosition": 125,
              "body": "```suggestion\r\n<t>Delivery rate samples are generated upon receiving ACKs; Losing an ACK results in losing the delivery rate sample, and instead generating a delivery rate sample from a subsequent ACK. Lost ACKs can underestimate the delivery rate due the artificially inflated \"rs.interval\". The impact of this effect is mitigated using the BBR.max_bw filter. </t>\r\n```",
              "createdAt": "2024-10-16T01:59:15Z",
              "updatedAt": "2024-10-16T02:00:46Z"
            },
            {
              "originalPosition": 134,
              "body": "This is TCP centric, FYI.  Also, I don't think we care about the performance of BBR without SACK?",
              "createdAt": "2024-10-16T02:00:33Z",
              "updatedAt": "2024-10-16T02:00:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOL3MllM6NVEJt",
          "commit": {
            "abbreviatedOid": "9571b36"
          },
          "author": "jbeshay",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-16T03:36:55Z",
          "updatedAt": "2024-10-16T03:36:55Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "We could remove the description of the specific receive window tuning behavior.\r\n```suggestion\r\n<t>BBR waits three packet-timed round trips to have reasonable evidence that the sender is not detecting a delivery-rate plateau that was temporarily imposed by congestion or receive-window auto-tuning. This three-round threshold was validated by experimental data to allow the receiver the chance to grow its receive window.</t>\r\n```",
              "createdAt": "2024-10-16T03:36:55Z",
              "updatedAt": "2024-10-16T03:36:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOL3MllM6NVEjI",
          "commit": {
            "abbreviatedOid": "9571b36"
          },
          "author": "jbeshay",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-16T03:39:13Z",
          "updatedAt": "2024-10-16T03:39:13Z",
          "comments": [
            {
              "originalPosition": 125,
              "body": "I will use your suggestion, changing the casing of `losing` after `ACKs;`\r\n```suggestion\r\n<t>Delivery rate samples are generated upon receiving ACKs; losing an ACK results in losing the delivery rate sample, and instead generating a delivery rate sample from a subsequent ACK. Lost ACKs can underestimate the delivery rate due the artificially inflated \"rs.interval\". The impact of this effect is mitigated using the BBR.max_bw filter. </t>\r\n```",
              "createdAt": "2024-10-16T03:39:13Z",
              "updatedAt": "2024-10-16T03:39:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOL3MllM6ODeZI",
          "commit": {
            "abbreviatedOid": "acbd8ca"
          },
          "author": "ianswett",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "Text LG, but we should decide if we want to impose the line limits I've seen in other Github IETF projects.",
          "createdAt": "2024-10-21T20:46:22Z",
          "updatedAt": "2024-10-21T20:47:01Z",
          "comments": [
            {
              "originalPosition": 65,
              "body": "The text LG, but usually we reflow markdown to ~80 character lines, at least in my experience.",
              "createdAt": "2024-10-21T20:46:22Z",
              "updatedAt": "2024-10-21T20:47:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOL3MllM6OD1rG",
          "commit": {
            "abbreviatedOid": "acbd8ca"
          },
          "author": "nealcardwell",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-21T21:49:37Z",
          "updatedAt": "2024-10-21T21:49:37Z",
          "comments": [
            {
              "originalPosition": 65,
              "body": "I prefer 80 character lines as well. It should make it easier to have smaller, easy-to-review diffs. And make it easier to view/edit as well.\r\n\r\n@jbeshay - if you have time to reformat to 80 characters, that's great.\r\n\r\nSince we're on a deadline, I'm OK with merging this version now and I can reformat as a follow-up if you want.\r\n\r\n",
              "createdAt": "2024-10-21T21:49:37Z",
              "updatedAt": "2024-10-21T21:49:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOL3MllM6OD3zT",
          "commit": {
            "abbreviatedOid": "acbd8ca"
          },
          "author": "jbeshay",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-21T21:56:54Z",
          "updatedAt": "2024-10-21T21:56:55Z",
          "comments": [
            {
              "originalPosition": 65,
              "body": "Sounds good. I'll merge this now then. I will push the reformat to 80 characters later tonight.",
              "createdAt": "2024-10-21T21:56:55Z",
              "updatedAt": "2024-10-21T21:56:55Z"
            }
          ]
        }
      ]
    },
    {
      "number": 5,
      "id": "PR_kwDOL3MllM5_WnhG",
      "title": "Remove BBR.ack_phase from pseudocode",
      "url": "https://github.com/ietf-wg-ccwg/draft-ietf-ccwg-bbr/pull/5",
      "state": "OPEN",
      "author": "jbeshay",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "We don't need to explicitly track the ack_phase in order to advance MaxBWFilter. Instead, we can advance it when entering ProbeBW_Down.\r\n\r\nThis logic is currently used in Mvfst. ",
      "createdAt": "2024-10-21T17:14:29Z",
      "updatedAt": "2024-10-21T17:14:29Z",
      "baseRepository": "ietf-wg-ccwg/draft-ietf-ccwg-bbr",
      "baseRefName": "main",
      "baseRefOid": "871539f6c9e8561fc77578c37f6f33e890797c8f",
      "headRepository": "jbeshay/draft-ietf-ccwg-bbr",
      "headRefName": "remove_ack_phase",
      "headRefOid": "ee98c12ad6f0e93153656218a7df1b1ef92618d7",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 6,
      "id": "PR_kwDOL3MllM5_WrsD",
      "title": "Use consistent value for drain pacing gain which matches derivation doc",
      "url": "https://github.com/ietf-wg-ccwg/draft-ietf-ccwg-bbr/pull/6",
      "state": "OPEN",
      "author": "jbeshay",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The drain gain value is inconsistent. The derivation doc linked (https://github.com/google/bbr/blob/master/Documentation/startup/gain/analysis/bbr_drain_gain.pdf) suggests using 0.5 and that's the value referenced in the table under (Summary of Control Behavior in the State Machine).  0.35 (~ 1 / StartupPacingGain) is used in a couple of other places.\r\n\r\nThis PR changes it to 0.5 everywhere. \r\n\r\nAlternatively, we could change the table to use 0.35 since this is what existing implementations are using ([Linux TCP](https://github.com/google/bbr/blob/v3/net/ipv4/tcp_bbr.c#L221C46-L221C51), [Quiche](https://github.com/google/quiche/blob/73107195dfbe8f0a531d3e2f052c9f2e15ec0e3c/quiche/quic/core/congestion_control/bbr2_misc.h#L111), [Mvfst](https://github.com/facebook/mvfst/blob/main/quic/congestion_control/Bbr2.cpp#L27)). The 0.5 value can be regarded as an upper bound.",
      "createdAt": "2024-10-21T17:24:45Z",
      "updatedAt": "2024-10-22T01:11:26Z",
      "baseRepository": "ietf-wg-ccwg/draft-ietf-ccwg-bbr",
      "baseRefName": "main",
      "baseRefOid": "871539f6c9e8561fc77578c37f6f33e890797c8f",
      "headRepository": "jbeshay/draft-ietf-ccwg-bbr",
      "headRefName": "drain_gain",
      "headRefOid": "c7d7d37bdce9fef05648cf524d83c06d130e68d4",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOL3MllM6OEkCF",
          "commit": {
            "abbreviatedOid": "c7d7d37"
          },
          "author": "ianswett",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "LGTM, minus the very long line.",
          "createdAt": "2024-10-22T01:11:15Z",
          "updatedAt": "2024-10-22T01:11:26Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "Please reflow this",
              "createdAt": "2024-10-22T01:11:16Z",
              "updatedAt": "2024-10-22T01:11:26Z"
            }
          ]
        }
      ]
    }
  ]
}